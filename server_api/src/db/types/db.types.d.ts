/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Timestamp = ColumnType<Date, Date | string>;

export interface Categories {
  categoryGroupPid: string;
  createdAt: Generated<Timestamp>;
  createdBy: string;
  id: Generated<number>;
  name: string;
  pid: string;
}

export interface CategoriesGroups {
  createdAt: Generated<Timestamp>;
  createdBy: string;
  id: Generated<number>;
  name: string;
  pid: string;
}

export interface Logs {
  createdAt: Generated<Timestamp | null>;
  id: Generated<number>;
  ipAddress: string | null;
  routePath: string | null;
}

export interface Recipients {
  address: Json | null;
  approveBy: string | null;
  createdAt: Generated<Timestamp>;
  createdBy: string;
  email: string | null;
  firstName: string;
  hourlyRate: number;
  id: Generated<number>;
  lastName: string;
  notes: string | null;
  phone: string;
  pid: string;
}

export interface Services {
  categoryPid: string;
  createdAt: Generated<Timestamp>;
  createdBy: string;
  id: Generated<number>;
  name: string;
  pid: string;
  time: number;
}

export interface Users {
  createdAt: Generated<Timestamp>;
  email: string;
  id: Generated<number>;
  pid: string;
  role: string;
}

export interface UsersAdmins {
  createdAt: Generated<Timestamp>;
  firstName: string;
  id: Generated<number>;
  lastName: string;
  password: string;
  pid: string;
}

export interface UsersProviders {
  companyCode: string;
  companyName: string;
  createdAt: Generated<Timestamp>;
  createdBy: string;
  emailCode: number | null;
  id: Generated<number>;
  pid: string;
}

export interface UsersWorkers {
  createdAt: Generated<Timestamp>;
  createdBy: string;
  emailCode: number | null;
  firstName: string;
  id: Generated<number>;
  lastName: string;
  phone: string;
  pid: string;
}

export interface Visits {
  createdAt: Generated<Timestamp>;
  createdBy: string;
  id: Generated<number>;
  pid: string;
  recipientPid: string;
  status: string;
  timeFrom: Timestamp;
  timeTo: Timestamp;
  workerPid: string;
}

export interface VisitsApprovals {
  createdAt: Generated<Timestamp>;
  createdBy: string;
  id: Generated<number>;
  pid: string;
  signature: string | null;
  visitPid: string;
}

export interface VisitsLogs {
  actionStatus: string;
  createdAt: Generated<Timestamp>;
  createdBy: string;
  id: Generated<number>;
  pid: string;
  servicePid: string | null;
  timeLog: Generated<Timestamp>;
  visitPid: string;
  workerLocation: Json | null;
}

export interface DB {
  categories: Categories;
  categoriesGroups: CategoriesGroups;
  logs: Logs;
  recipients: Recipients;
  services: Services;
  users: Users;
  usersAdmins: UsersAdmins;
  usersProviders: UsersProviders;
  usersWorkers: UsersWorkers;
  visits: Visits;
  visitsApprovals: VisitsApprovals;
  visitsLogs: VisitsLogs;
}
